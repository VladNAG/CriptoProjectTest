// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewForReact.Data;

#nullable disable

namespace CriptoProjectTest.Migrations
{
    [DbContext(typeof(DataDbContent))]
    [Migration("20240524230917_FixPrise")]
    partial class FixPrise
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CriptoProjectTest.Entityes.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateLastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PriceUsd")
                        .HasColumnType("decimal(18, 10)");

                    b.HasKey("Id");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            AssetId = "PEPE",
                            DateLastUpdate = new DateTime(2024, 5, 25, 0, 9, 17, 814, DateTimeKind.Local).AddTicks(1425),
                            Name = "PepeCoin"
                        },
                        new
                        {
                            Id = 2,
                            AssetId = "BTC",
                            DateLastUpdate = new DateTime(2024, 5, 25, 0, 9, 17, 814, DateTimeKind.Local).AddTicks(1470),
                            Name = "Bitcoin"
                        },
                        new
                        {
                            Id = 3,
                            AssetId = "ETH",
                            DateLastUpdate = new DateTime(2024, 5, 25, 0, 9, 17, 814, DateTimeKind.Local).AddTicks(1472),
                            Name = "Ethereum"
                        },
                        new
                        {
                            Id = 4,
                            AssetId = "BNB",
                            DateLastUpdate = new DateTime(2024, 5, 25, 0, 9, 17, 814, DateTimeKind.Local).AddTicks(1474),
                            Name = "Binance Coin"
                        },
                        new
                        {
                            Id = 1,
                            AssetId = "USD",
                            DateLastUpdate = new DateTime(2024, 5, 25, 0, 9, 17, 814, DateTimeKind.Local).AddTicks(1476),
                            Name = "US Dollar"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
